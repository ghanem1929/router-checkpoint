{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization'; // import { CalendarPickerView } from '../internals/models';\n\nconst deDEPickers = {\n  // Calendar navigation\n  previousMonth: 'Letzter Monat',\n  nextMonth: 'Nächster Monat',\n  // View navigation\n  openPreviousView: 'Letzte Ansicht öffnen',\n  openNextView: 'Nächste Ansicht öffnen',\n  // calendarViewSwitchingButtonAriaLabel: (view: CalendarPickerView) => view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view',\n  // DateRange placeholders\n  start: 'Beginn',\n  end: 'Ende',\n  // Action bar\n  cancelButtonLabel: 'Abbrechen',\n  clearButtonLabel: 'Löschen',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Heute' // Clock labels\n  // clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'No time selected' : `Selected time is ${adapter.format(time, 'fullTime')}`}`,\n  // hoursClockNumberText: hours => `${hours} hours`,\n  // minutesClockNumberText: minutes => `${minutes} minutes`,\n  // secondsClockNumberText: seconds => `${seconds} seconds`,\n  // Open picker labels\n  // openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose date, selected date is ${utils.format(utils.date(rawValue)!, 'fullDate')}` : 'Choose date',\n  // openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose time, selected time is ${utils.format(utils.date(rawValue)!, 'fullTime')}` : 'Choose time',\n  // Table labels\n  // timeTableLabel: 'pick time',\n  // dateTableLabel: 'pick date',\n\n};\nexport const deDE = getPickersLocalization(deDEPickers);","map":{"version":3,"names":["getPickersLocalization","deDEPickers","previousMonth","nextMonth","openPreviousView","openNextView","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","deDE"],"sources":["/home/ghanem19/Desktop/GoMyCode/router/node_modules/@mui/x-date-pickers/locales/deDE.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization'; // import { CalendarPickerView } from '../internals/models';\n\nconst deDEPickers = {\n  // Calendar navigation\n  previousMonth: 'Letzter Monat',\n  nextMonth: 'Nächster Monat',\n  // View navigation\n  openPreviousView: 'Letzte Ansicht öffnen',\n  openNextView: 'Nächste Ansicht öffnen',\n  // calendarViewSwitchingButtonAriaLabel: (view: CalendarPickerView) => view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view',\n  // DateRange placeholders\n  start: 'Beginn',\n  end: 'Ende',\n  // Action bar\n  cancelButtonLabel: 'Abbrechen',\n  clearButtonLabel: 'Löschen',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Heute' // Clock labels\n  // clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'No time selected' : `Selected time is ${adapter.format(time, 'fullTime')}`}`,\n  // hoursClockNumberText: hours => `${hours} hours`,\n  // minutesClockNumberText: minutes => `${minutes} minutes`,\n  // secondsClockNumberText: seconds => `${seconds} seconds`,\n  // Open picker labels\n  // openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose date, selected date is ${utils.format(utils.date(rawValue)!, 'fullDate')}` : 'Choose date',\n  // openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose time, selected time is ${utils.format(utils.date(rawValue)!, 'fullTime')}` : 'Choose time',\n  // Table labels\n  // timeTableLabel: 'pick time',\n  // dateTableLabel: 'pick date',\n\n};\nexport const deDE = getPickersLocalization(deDEPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC,C,CAAyE;;AAEzE,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,eAFG;EAGlBC,SAAS,EAAE,gBAHO;EAIlB;EACAC,gBAAgB,EAAE,uBALA;EAMlBC,YAAY,EAAE,wBANI;EAOlB;EACA;EACAC,KAAK,EAAE,QATW;EAUlBC,GAAG,EAAE,MAVa;EAWlB;EACAC,iBAAiB,EAAE,WAZD;EAalBC,gBAAgB,EAAE,SAbA;EAclBC,aAAa,EAAE,IAdG;EAelBC,gBAAgB,EAAE,OAfA,CAeQ;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAzBkB,CAApB;AA4BA,OAAO,MAAMC,IAAI,GAAGZ,sBAAsB,CAACC,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}